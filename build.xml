<?xml version="1.0"?>
<project name="Horizon" default="build" basedir=".">

  <import file="build-layout.xml" as="lo"/>
  <property name="pkg.name" value="${ant.project.name}"/>
  <property name="pkg.version" value="2.4+dev"/>
  <property name="debug" value="true"/>

  <property name="target.jar" value="${pkg.name}-${pkg.version}.jar"/>
  <property name="target.jar.path" value="${dir.lib}/${target.jar}"/>

  <path id="classpath.build">
    <pathelement location="${dir.build.classes}" />
    <path refid="local.jar.path"/>
  </path>
  <path id="classpath.test">
    <pathelement location="${dir.test.classes}" />
    <path refid="classpath.build"/>
    <pathelement location="${target.jar.path}" />
  </path>

  <target name="init" depends="lo.initOutputDirs">
  </target>

  <target name="init-tests" depends="init,lo.initTestDirs">
  </target>

  <target name="build" depends="jar,doc"/>

  <target name="compile" depends="init">
    <javac srcdir="${dir.src}" destdir="${dir.build.classes}" 
           debug="${debug}" classpathref="classpath.build" deprecation="on"
           optimize="off" source="1.5" includeantruntime="false"/>
    <copy todir="${dir.build.classes}">
      <fileset dir="${dir.src}">
        <include name="**/*.properties"/>
      </fileset>
    </copy>
  </target>

  <target name="jar" depends="compile">
    <jar jarfile="${target.jar.path}" basedir="${dir.build.classes}" />
  </target>

  <target name="compile-tests" depends="init-tests,compile">
    <javac srcdir="${dir.test.src}" destdir="${dir.test.classes}" 
           debug="${debug}" classpathref="classpath.build" deprecation="on"
           optimize="off" source="1.5" includeantruntime="true"/>
    <copy todir="${dir.test.classes}">
      <fileset dir="${dir.test.src}">
        <include name="**/*.properties"/>
      </fileset>
    </copy>
  </target>

  <target name="doc" depends="api"/>

  <target name="api" depends="init">
    <javadoc sourcepath="${dir.src}" destdir="${dir.doc}/japi"
             author="true" version="true" use="true"
             classpathref="classpath.build"/>
  </target>

  <target name="test" depends="test-unit"/>

  <target name="test-unit" depends="init-tests,compile-tests">
      <junit printsummary="yes"  includeAntRuntime="true" haltonfailure="yes">
        <classpath refid="classpath.test" />
        <formatter type="plain" />
        <batchtest todir="${dir.testreport}">
          <fileset dir="${dir.test.classes}">
            <include name="**/*Test.class" />
          </fileset>
        </batchtest>
        <sysproperty key="test.tmpdir" value="${dir.tmp}"/>
        <sysproperty key="test.outdir" value="${dir.test.data}"/>
      </junit>
  </target>

  <target name="testclass" if="test-class"
          description="Run a single JUnit Test class">
    <junit printsummary="yes"  includeAntRuntime="true" haltonfailure="yes">
       <classpath refid="classpath.test" />
       <formatter type="plain" />
       <batchtest todir="${dir.testreports}">
         <fileset dir="${dir.test.classes}">
           <include name="**/${test-class}.class" />
         </fileset>
       </batchtest>
       <sysproperty key="test.tmpdir" value="${dir.tmp}"/>
       <sysproperty key="test.outdir" value="${dir.test.data}"/>
    </junit>
  </target>

  <target name="clean" depends="lo.cleanOutputDirs">
  </target>

  <target name="clean-target">
    <delete file="${target.jar.path}"/>
  </target>

  <target name="distclean" depends="clean-target,lo.distCleanOutputDirs">
    <delete dir="${dir.lib}"/>
    <delete dir="${dir.doc}"/>
  </target>

  <target name="show-build-cp">
    <echo message="classpath: ${toString:classpath.build}"/>
  </target>

  <target name="show-test-cp">
    <echo message="classpath: ${toString:classpath.test}"/>
  </target>

</project>
